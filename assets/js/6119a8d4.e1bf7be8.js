"use strict";(self.webpackChunknebula=self.webpackChunknebula||[]).push([[401],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,h=m["".concat(c,".").concat(f)]||m[f]||p[f]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1787:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},assets:function(){return u},toc:function(){return p},default:function(){return f}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={layout:"default"},c="Web UI",s={permalink:"/blog/2021/01/01/web_ui",source:"@site/blog/2021-01-01-web_ui.md",title:"Web UI",description:"From service deployment perspective, there are 4 major components backs up Nebula service.",date:"2021-01-01T00:00:00.000Z",formattedDate:"January 1, 2021",tags:[],readingTime:2.305,truncated:!1,authors:[],prevItem:{title:"Sketch: extensible customized aggregation",permalink:"/blog/2021/02/01/sketch"},nextItem:{title:"BigInt Problem",permalink:"/blog/2020/09/01/bigint"}},u={authorsImageUrls:[]},p=[],m={toc:p};function f(e){var t=e.components,l=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"From service deployment perspective, there are 4 major components backs up ",(0,o.kt)("strong",{parentName:"p"},"Nebula")," service.\nThey are "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Nebula Server"),(0,o.kt)("li",{parentName:"ol"},"Nebula Nodes"),(0,o.kt)("li",{parentName:"ol"},"Nebula Service Gateway (Envoy)"),(0,o.kt)("li",{parentName:"ol"},"Nebula Web")),(0,o.kt)("p",null,"Today these components are architectured in this way.\n",(0,o.kt)("img",{alt:"Components V1",src:n(6663).Z})),(0,o.kt)("p",null,"In this mode, we're opening Nebula raw service through envoy as service gateway which usually listens at some port for http traffic, itself maintains connection with Nebula service through HTTP2 (grpc)."),(0,o.kt)("p",null,"Another open service is the web server which listens at standard 80 for browsers request, this service is backed by a NODE server (NodeJS). It serves static content and client logic for Nebula Web UI, this Web UI provides query interface for data analysis and graphics/charting functions for display. "),(0,o.kt)("p",null,"Why do we architecture it in this way from beginning? Well, there are a few advantages by doing so:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"It maintains a lightweight web service for least amount of maintaince cost with high QPS for performance."),(0,o.kt)("li",{parentName:"ol"},"It sets up Web UI as a completely independant component which could be replaced by any tech stack or any new client for consuming the same service."),(0,o.kt)("li",{parentName:"ol"},"It provides complete UI/service separation for better maintainance. ")),(0,o.kt)("p",null,"I appreciate this arch as it places decoupled design giving us best flexbility to make changes independently."),(0,o.kt)("p",null,"Now, I'm making a slight change for WEB-UI by routing service consumption behind web server. The reasons why I'm doing so are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Authentication. Due to isolation, we need to implement authentication in both interfaces (web + envoy) for single web client. By moving the service behind, we only need to maintain one for web only."),(0,o.kt)("li",{parentName:"ul"},"Security. This change doesn't mean enovy doesn't need authentication. We need to implement it anyways but not priority for now.")),(0,o.kt)("p",null,"After the change, th arch will look like this\n",(0,o.kt)("img",{alt:"Components V2",src:n(1598).Z})),(0,o.kt)("p",null,"The drawback of this change is obvious:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"for each query, it goes two hops rather than one (Q: client -> web -> (envoy -> server) -> web -> client).\nGiven the extra hop happens in the same server for most of the cases, the impact should be minimal."),(0,o.kt)("li",{parentName:"ol"},"adding complexity of query/result transfer logic into web tier which is mostly doing translation."),(0,o.kt)("li",{parentName:"ol"},"Extra serde (JSON) from server replied object and web client.")),(0,o.kt)("p",null,"After this change, the envoy gateway is still open, but it will not consumed directly by web client.\nAlso note that, the pros/cons are clear for v1 vs v2, we want to make sure things are easy to switch back and forth. Currently it is supported by a variable ",(0,o.kt)("inlineCode",{parentName:"p"},"archMode")," in web.js, we may move it to nebula config in future."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"archMode = 1 (v1): web client connect nebula server for query."),(0,o.kt)("li",{parentName:"ul"},"archMode = 2 (v2): web client connect web api as proxy for query.")),(0,o.kt)("p",null,"Cheers!"))}f.isMDXComponent=!0},6663:function(e,t,n){t.Z=n.p+"assets/images/com_v1-e5463055b134abffda79f2d0035e277f.png"},1598:function(e,t,n){t.Z=n.p+"assets/images/com_v2-ae252b631a86f22c534a3a2d3229ea42.png"}}]);