"use strict";(self.webpackChunknebula=self.webpackChunknebula||[]).push([[477],{10:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"Custom Column - Instant UDF","metadata":{"permalink":"/blog/2021/04/01/custom_column","source":"@site/blog/2021-04-01-custom_column.md","title":"Custom Column - Instant UDF","description":"Overview","date":"2021-04-01T00:00:00.000Z","formattedDate":"April 1, 2021","tags":[],"readingTime":2.195,"truncated":false,"authors":[],"nextItem":{"title":"Expression, UDF, and UDAF","permalink":"/blog/2021/03/01/expression_udf_udaf"}}},{"id":"Expression, UDF, and UDAF","metadata":{"permalink":"/blog/2021/03/01/expression_udf_udaf","source":"@site/blog/2021-03-01-expression_udf_udaf.md","title":"Expression, UDF, and UDAF","description":"Nebula analytics relies on aggregations, and these aggregations are expressed by","date":"2021-03-01T00:00:00.000Z","formattedDate":"March 1, 2021","tags":[],"readingTime":2.405,"truncated":false,"authors":[],"prevItem":{"title":"Custom Column - Instant UDF","permalink":"/blog/2021/04/01/custom_column"},"nextItem":{"title":"Sketch: extensible customized aggregation","permalink":"/blog/2021/02/01/sketch"}}},{"id":"Sketch: extensible customized aggregation","metadata":{"permalink":"/blog/2021/02/01/sketch","source":"@site/blog/2021-02-01-sketch.md","title":"Sketch: extensible customized aggregation","description":"We need extensible model to support adding any customized data structure for special data aggregation.","date":"2021-02-01T00:00:00.000Z","formattedDate":"February 1, 2021","tags":[],"readingTime":4.34,"truncated":false,"authors":[],"prevItem":{"title":"Expression, UDF, and UDAF","permalink":"/blog/2021/03/01/expression_udf_udaf"},"nextItem":{"title":"Web UI","permalink":"/blog/2021/01/01/web_ui"}}},{"id":"Web UI","metadata":{"permalink":"/blog/2021/01/01/web_ui","source":"@site/blog/2021-01-01-web_ui.md","title":"Web UI","description":"From service deployment perspective, there are 4 major components backs up Nebula service.","date":"2021-01-01T00:00:00.000Z","formattedDate":"January 1, 2021","tags":[],"readingTime":2.305,"truncated":false,"authors":[],"prevItem":{"title":"Sketch: extensible customized aggregation","permalink":"/blog/2021/02/01/sketch"},"nextItem":{"title":"BigInt Problem","permalink":"/blog/2020/09/01/bigint"}}},{"id":"BigInt Problem","metadata":{"permalink":"/blog/2020/09/01/bigint","source":"@site/blog/2020-09-01-bigint.md","title":"BigInt Problem","description":"We know that Javascript can only represent 2^53-1 as it max number. For any values larger than that will lose precision during data exchange in javascript runtime. Most of the time, we have to pay cost to serializing 64bits in string format.","date":"2020-09-01T00:00:00.000Z","formattedDate":"September 1, 2020","tags":[],"readingTime":2.33,"truncated":false,"authors":[],"prevItem":{"title":"Web UI","permalink":"/blog/2021/01/01/web_ui"}}}]}')}}]);